@model IEnumerable<InventoryStudio.Models.AccessToken.AccessTokenViewModel>

@{
    ViewData["Title"] = "Index";
    var normalizedBoolean = "normalizedBooleanFn";
}

<div class="container-fluid py-4 h-100">
    <div class="card custom-card h-100">
        <div class="card-header hstack justify-content-between align-items-center">
            <div class="card-title">
                Access Tokens
            </div>
            <div>
                <a class="btn btn-primary btn-sm" asp-controller="AccessToken" asp-action="Create">
                    <i class="bi-plus"></i> Create
                </a>
            </div>
        </div>
        <div class="card-body">
            
            <ejs-grid id="Grid" class="h-100" allowPaging="true" allowReordering="true" allowSorting="true" toolbarClick="toolbarClick" allowSelection="true" allowFiltering="true" enableStickyHeader="true" width="100%" height="100%"
                      allowExcelExport="true" allowPdfExport="true" toolbar="@(new List<string>() { "Delete", "PdfExport", "ExcelExport" })">

                <e-grid-editSettings showDeleteConfirmDialog="true" allowDeleting="true">
                </e-grid-editSettings>
                <e-grid-filterSettings type="Excel" mode="OnEnter"></e-grid-filterSettings>
                <e-data-manager url="/AccessToken/UrlDatasource" adaptor="UrlAdaptor" insertUrl="/AccessToken/Insert"
                                updateUrl="/AccessToken/Update" removeUrl="/AccessToken/Remove">
                </e-data-manager>
                @* <e-grid-pagesettings pageCount="5"></e-grid-pagesettings> *@
                <e-grid-columns>
                    <e-grid-column visible="false" field="Id" headerText="ID" type="int" isPrimaryKey="true"
                                   validationRules="@(new { number = true })" width="80">
                    </e-grid-column>
                    <e-grid-column field="ApplicationName" headerText="Application Name" width="200"></e-grid-column>
                    <e-grid-column field="TokenName" headerText="Token Name" width="200"></e-grid-column>
                    <e-grid-column field="InActive" headerText="Inactive" valueAccessor="normalizedBoolean" width="120"></e-grid-column>
                    <e-grid-column field="Role" headerText="Role" width="120"></e-grid-column>
                    <e-grid-column field="CreatedOn" headerText="Created On" width="180"></e-grid-column>
                    <e-grid-column field="CreatedBy" headerText="Created By" width="180"></e-grid-column>
                    <e-grid-column field="UpdatedOn" headerText="Updated On" width="180"></e-grid-column>
                    <e-grid-column field="UpdatedBy" headerText="Updated By" width="180"></e-grid-column>
                    <e-grid-column headerText="Actions" template="#actions" width="100" maxWidth="100"></e-grid-column>
                </e-grid-columns>
            </ejs-grid>
        </div>
    </div>
</div>



<!-- Actions template -->
<script id="actions" type="text/x-template">
    <div class="hstack gap-2">
        <a href="/AccessToken/Edit?id=${Id}" class="btn btn-icon btn-warning-light" data-bs-toggle="tooltip" title="Edit user" aria-label="Edit user button">
            <i class="bi-pencil-fill"></i>
        </a>
        <a href="/AccessToken/Details?id=${Id}" class="btn btn-icon btn-info-light" data-bs-toggle="tooltip" title="View user" aria-label="View user button">
            <i class="bi-eye-fill"></i>
        </a>
    </div>
</script>

<!-- Javascript logic for datagrid -->
<script lang="js">

 function normalizedBooleanFn(field, data, column) {
        var value = data[field];
        if (value) {
            return "Yes";
        }
        return "No";
    }
    
    function toolbarClick(args) {
        var gridObj = document.getElementById("Grid").ej2_instances[0];
        if (args.item.id === 'Grid_pdfexport') {
            var pdfdata = gridObj.getSelectedRecords();
            if (pdfdata?.length > 0) {
                var exportProperties = {
                    dataSource: pdfdata,
                    includeHiddenColumn: true
                };
                gridObj.pdfExport(exportProperties);
            } else {
                gridObj.pdfExport();
            }
        }
        if (args.item.id === 'Grid_excelexport') {
            var exceldata = gridObj.getSelectedRecords();
            if (exceldata?.length > 0) {
                var exportProperties = {
                    dataSource: exceldata,
                    includeHiddenColumn: true
                };
                gridObj.excelExport(exportProperties);
            } else {
                gridObj.excelExport();
            }

        }
    }
</script>
