@model InventoryStudio.Models.ViewModels.UserIndexViewModel

@{
    ViewData["Title"] = "User Management";
}


<div class="container-fluid py-4">
    <div class="card custom-card">
        <div class="card-header d-flex align-items-center justify-content-between">
            <div class="card-title">
                User Management
            </div>
            <div class="btn-list mt-md-0 mt-2">
                <a asp-controller="User" asp-action="Create" type="button" class="btn btn-sm btn-primary btn-wave d-flex align-items-center">
                    <i class="bi-person-plus-fill me-2 align-middle d-inline-block fs-16"></i>Create User
                </a>
            </div>
        </div>


        <div class="card-body">
            <ejs-grid id="Grid" allowPaging="true" allowReordering="true" allowSorting="true" toolbarClick="toolbarClick" allowSelection="true" allowFiltering="true" enableStickyHeader="true" width="100%" height="auto"
                      allowExcelExport="true" allowPdfExport="true" toolbar="@(new List<string>() { "Edit", "Delete", "PdfExport", "ExcelExport" })">

                <e-grid-editSettings showDeleteConfirmDialog="true" allowDeleting="true" allowEditing="true">
                </e-grid-editSettings>
                <e-grid-filterSettings type="Excel" mode="OnEnter"></e-grid-filterSettings>
                <e-data-manager url="@Url.Action("UrlDatasource", "User")" adaptor="UrlAdaptor" insertUrl="/User/Insert"
                                updateUrl="/User/Update" removeUrl="/User/Remove">
                </e-data-manager>
                @* <e-grid-pagesettings pageCount="5"></e-grid-pagesettings> *@
                <e-grid-columns>
                    <e-grid-column visible="false" field="Id" headerText="ID" type="int" isPrimaryKey="true"
                                   validationRules="@(new { number = true })" width="80">
                    </e-grid-column>
                    <e-grid-column field="UserName" headerText="User Name" width="120"></e-grid-column>
                    <e-grid-column field="UserType" headerText="User Type" width="120"></e-grid-column>
                    <e-grid-column field="Status" headerText="Status" width="120"></e-grid-column>
                    <e-grid-column field="Email" headerText="E-mail" width="120"></e-grid-column>
                    <e-grid-column field="PhoneNumber" headerText="Phone Number" width="120"></e-grid-column>
                </e-grid-columns>
            </ejs-grid>
        </div>
    </div>


    @* <table class="table"> *@
    @*     <thead> *@
    @*         <tr> *@
    @*             <th>UserName</th> *@
    @*             <th>UserType</th> *@
    @*             <th>Status</th> *@
    @*             <th>Email</th> *@
    @*             <th>PhoneNumber</th> *@
    @*             <th></th> *@
    @*         </tr> *@
    @*     </thead> *@
    @*     <tbody> *@
    @*         *@
    @*             <tr> *@
    @*                *@
    @*                 <td> *@
    @*                     $1$ <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> | #1# *@
    @*                     $1$ <a asp-action="Details" asp-route-id="@item.Id">Details</a> | #1# *@
    @*                     $1$ <a asp-action="Delete" asp-route-id="@item.Id">Delete</a> #1# *@
    @*                 </td> *@
    @*             </tr> *@
    @*          *@
    @*     </tbody> *@
    @* </table> *@
    @* <a asp-action="Create">Create New User</a> *@
</div>


<script lang="js">
        function toolbarClick(args) {
            var gridObj=document.getElementById("Grid").ej2_instances[0];
            if (args.item.id=== 'Grid_pdfexport') {
            var pdfdata=gridObj.getSelectedRecords();
            if (pdfdata?.length> 0) {
                var exportProperties = {
                    dataSource: pdfdata,
                    includeHiddenColumn: true
                };
                gridObj.pdfExport(exportProperties);
                } else {
                    gridObj.pdfExport();
                }
            }
            if (args.item.id === 'Grid_excelexport') {
                var exceldata = gridObj.getSelectedRecords();
                if (exceldata?.length > 0) {
                    var exportProperties = {
                        dataSource: exceldata,
                        includeHiddenColumn: true
                    };
                    gridObj.excelExport(exportProperties);
                } else {
                    gridObj.excelExport();
                }
            
            }
        }
            
</script>