@model InventoryStudio.Models.ViewModels.UserIndexViewModel

@{
    ViewData["Title"] = "User Management";
}


<div class="container-fluid py-4 h-100">
    <div class="card custom-card h-100">
        <div class="card-header hstack align-items-center justify-content-between">
            <div class="card-title">
                User Management
            </div>
            <div class="hstack btn-list mt-md-0 mt-2">
                <a asp-controller="User" asp-action="Create" type="button" class="btn btn-sm btn-primary btn-wave hstack align-items-center" aria-label="Create user button">
                    <i class="bi-person-plus-fill me-2 align-middle d-inline-block fs-16"></i>Create User
                </a>
                <a asp-controller="User" asp-action="Invite" type="button" class="btn btn-sm btn-secondary btn-wave hstack align-items-center" aria-label="Invite button">
                    <i class="bi-person-plus-fill me-2 align-middle d-inline-block fs-16"></i>Invite User
                </a>
            </div>

        </div>
        <div class="card-body">
            <ejs-grid id="Grid" class="h-100" allowPaging="true" allowReordering="true" allowSorting="true" toolbarClick="toolbarClick" allowSelection="true" allowFiltering="true" enableStickyHeader="true" width="100%" height="100%"
                      allowExcelExport="true" allowPdfExport="true" toolbar="@(new List<string>() { "Delete", "PdfExport", "ExcelExport" })">

                <e-grid-editSettings showDeleteConfirmDialog="true" allowDeleting="true">
                </e-grid-editSettings>
                <e-grid-filterSettings type="Excel" mode="OnEnter"></e-grid-filterSettings>
                <e-data-manager url="/User/UrlDatasource" adaptor="UrlAdaptor" insertUrl="/User/Insert"
                                updateUrl="/User/Update" removeUrl="/User/Remove">
                </e-data-manager>
                @* <e-grid-pagesettings pageCount="5"></e-grid-pagesettings> *@
                <e-grid-columns>
                    <e-grid-column visible="false" field="Id" headerText="ID" type="int" isPrimaryKey="true"
                                   validationRules="@(new { number = true })" width="80">
                    </e-grid-column>
                    <e-grid-column field="UserName" headerText="User Name" width="120"></e-grid-column>
                    <e-grid-column field="UserType" headerText="User Type" width="120"></e-grid-column>
                    <e-grid-column field="Status" headerText="Status" width="120"></e-grid-column>
                    <e-grid-column field="Email" headerText="E-mail" width="120"></e-grid-column>
                    <e-grid-column field="PhoneNumber" headerText="Phone Number" width="120"></e-grid-column>
                    <e-grid-column headerText="Actions" template="#actions" width="100" maxWidth="100"></e-grid-column>
                </e-grid-columns>
            </ejs-grid>
        </div>
    </div>
</div>

<!-- Actions template -->
<script id="actions" type="text/x-template">
    <div class="hstack gap-2">
        <a href="/User/Edit?id=${Id}" class="btn btn-icon btn-warning-light" data-bs-toggle="tooltip" title="Edit user" aria-label="Edit user button">
            <i class="bi-pencil-fill"></i>
        </a>
        <a href="/User/Details?id=${Id}" class="btn btn-icon btn-info-light" data-bs-toggle="tooltip" title="View user" aria-label="View user button">
            <i class="bi-eye-fill"></i>
        </a>
    </div>
</script>

<!-- Javascript logic for datagrid -->
<script lang="js">
    function toolbarClick(args) {
        var gridObj = document.getElementById("Grid").ej2_instances[0];
        if (args.item.id === 'Grid_pdfexport') {
            var pdfdata = gridObj.getSelectedRecords();
            if (pdfdata?.length > 0) {
                var exportProperties = {
                    dataSource: pdfdata,
                    includeHiddenColumn: true,
                    fileName: "IS_Users.pdf"
                };
                gridObj.pdfExport(exportProperties);
            } else {
                gridObj.pdfExport({
                    fileName: "IS_Users.pdf"
                });
            }
        }
        if (args.item.id === 'Grid_excelexport') {
            var exceldata = gridObj.getSelectedRecords();
            if (exceldata?.length > 0) {
                var exportProperties = {
                    dataSource: exceldata,
                    includeHiddenColumn: true,
                    fileName: "IS_Users.xlsx"
                };
                gridObj.excelExport(exportProperties);
            } else {
                gridObj.excelExport({
                    fileName: "IS_Users.xlsx"
                });
            }

        }
    }
</script>